{"ts":1355416616719,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"util         =  require(\"util\")\r\npath         =  require(\"path\")\r\nmodules      =  path.join __dirname, 'modules'\r\nconnect      =  require(\"connect\")\r\nsession      =  connect.session\r\ncookieParser =  connect.cookieParser\r\nflatiron     =  require(\"flatiron\")\r\ndirector     =  require \"director\"\r\necstatic     =  require \"ecstatic\"\r\n#jade         = require \"jade.plugin\"\r\n#bliss        = require \"./lib/view.bliss.plugin.coffee\"\r\njshtml       =  require path.join(modules, \"view.jshtml.plugin.coffee\")\r\nparse        =  require path.join(modules, \"parse.plugin.coffee\")\r\nsession_helper        =  require path.join(modules, \"session_helper.coffee\")\r\n\r\napp = flatiron.app\r\napp.use flatiron.plugins.http\r\n\r\napp.http.before.push cookieParser(process.env.CookieParserSecret) # Set in your Environment...\r\napp.http.before.push session()\r\n\r\n#app.use jade.plugin, \r\n#  dir: \"\" + __dirname + \"/views\",\r\n#  ext: '.jade'\r\n\r\n#app.use bliss.plugin, \r\n#  dir: \"\" + __dirname + \"/views\",\r\n#  ext: '.bliss'\r\n\r\napp.use parse.plugin\r\n  \r\napp.use jshtml.plugin, \r\n  dir: \"\" + __dirname + \"/views\",\r\n  ext: '.jshtml'\r\n\r\napp.http.before.push ecstatic(\r\n        root: __dirname+'/assets',\r\n        baseDir: 'public' \r\n        )\r\n\r\napp.http.before.push (req,res) ->\r\n  unless req.session.user\r\n    req.session.user = false\r\n  msg = util.inspect \r\n    url: req.url\r\n    session: req.session\r\n  console.log \"[REQUEST] #{msg}\"\r\n\r\n  res.emit 'next'\r\n\r\napp.router.get \"/\",  ->\r\n  session_helper.view_locals @req, {}, (options) =>\r\n    app.render @res, 'index', options\r\n    \r\napp.router.get \"/login\", ->\r\n  session_helper.view_locals @req,\r\n    title: \"login | aZoo.me\"\r\n    isLogin: true\r\n  , (options) =>\r\n    app.render @res, \"login\", options\r\n\r\napp.router.post \"/login\",  ->\r\n  session_helper.login app, @req.body.username, @req.body.password, (err,user) =>\r\n    if err\r\n      delete @req.session.user\r\n      session_helper.redirect_with_error_number @req, @res, err, \"/login\"\r\n    else\r\n      @req.session.user = user\r\n      session_helper.redirect_with_success_number @req, @res, 0, \"/\"\r\n\r\napp.router.get \"/logout\",  ->\r\n  delete @req.session.user\r\n  session_helper.redirect_with_success_number @req, @res, 0, \"/\"\r\n\r\nport = process.env.PORT or 3000\r\nhost = process.env.IP\r\n\r\napp.start port, host, (err) ->\r\n    console.log \"[SERVER] Started at #{host}:#{port}...\"\r\n    properties = (prop for prop of app)\r\n    app.parse.list \"Users\", (err, data) ->\r\n      app.users = data.results\r\n      console.log \"[SERVER] Loaded #{app.users.length} users\"\r\n      #for property of app.users\r\n      #  console.log property    \r\n    \r\n"]],"start1":0,"start2":0,"length1":0,"length2":2594}]],"length":2594}
{"contributors":[],"silentsave":false,"ts":1355416652412,"patch":[[{"diffs":[[0,"eParser("],[1,"process.argv[2] or "],[0,"process."]],"start1":726,"start2":726,"length1":16,"length2":35},{"diffs":[[0,"erSecret"],[1," or \"Secret\""],[0,") # Set "]],"start1":775,"start2":775,"length1":16,"length2":28}]],"length":2625,"saved":false}
{"ts":1355416918536,"patch":[[{"diffs":[[1,"ParamNotSet = (p,n) ->\r\n    err = new Error(\"Environment Variable Not Set Error! Set #{p} or pass it in as the #{n} argument)\r\n    throw err\r\n    \r\n"],[0,"util        "]],"start1":0,"start2":0,"length1":12,"length2":160},{"diffs":[[0," or "],[-1,"\"Secret\""],[1,"ParamNotSet(\"CookieParserSecret\", \"1st\")"],[0,") # "]],"start1":931,"start2":931,"length1":16,"length2":48}]],"length":2805,"saved":false}
{"ts":1355416938144,"patch":[[{"diffs":[[0,"\")) "],[-1,"# Set in your Environment..."],[0,"\r\nap"]],"start1":973,"start2":973,"length1":36,"length2":8}]],"length":2777,"saved":false}
{"ts":1355417007207,"patch":[[{"diffs":[[-1,"ParamNotSet = (p,n) ->\r\n    err = new Error(\"Environment Variable Not Set Error! Set #{p} or pass it in as the #{n} argument)\r\n    throw err\r\n    \r\n"],[0,"util"]],"start1":0,"start2":0,"length1":152,"length2":4},{"diffs":[[0,"ee\")\r\n\r\n"],[1,"ParamNotSet = (p,n) ->\r\n    err = new Error(\"Environment Variable Not Set Error! Set #{p} or pass it in as the #{n} argument\")\r\n    throw err\r\n\r\n"],[0,"app = fl"]],"start1":639,"start2":639,"length1":16,"length2":161}]],"length":2774,"saved":false}
{"ts":1355417080996,"patch":[[{"diffs":[[0,"ser("],[-1,"process.argv[2] or "],[0,"proc"]],"start1":875,"start2":875,"length1":27,"length2":8},{"diffs":[[0,"erSecret"],[1," or process.argv[2]"],[0," or Para"]],"start1":901,"start2":901,"length1":16,"length2":35}]],"length":2774,"saved":false}
